[comment encoding = UTF-8 /]
[module modelFromViewModelAssignment('http://www.eryaz.com/prototype/ryz')]


[comment Begin Model Associations for MANY_TO_MANY Relations /]

[template public generateModelFromViewModelAssignmentForPrincipalEntity(aModelAssociation : ModelAssociation, aModel : Model) ? (aModelAssociation.cardinality = Cardinality::MANY_TO_MANY)]
_uow.[aModelAssociation.dependent.name/]Repository.GetAll(m => [aModel.name/]ViewModel.[aModelAssociation.dependentRoleName/]_[aModelAssociation.dependent.name/]Id.Contains(m.[aModelAssociation.dependent.name/]Id)).ToList();
[/template]

[template public generateModelFromViewModelAssignmentForDependentEntity(aModelAssociation : ModelAssociation, aModel : Model) ? (aModelAssociation.cardinality = Cardinality::MANY_TO_MANY)]
_uow.[aModelAssociation.principal.name/]Repository.GetAll(m => [aModel.name/]ViewModel.[aModelAssociation.principalRoleName/]_[aModelAssociation.principal.name/]Id.Contains(m.[aModelAssociation.principal.name/]Id)).ToList();
[/template]

[comment End Model Associations for MANY_TO_MANY Relations /]




[comment Begin Model Associations for ONE_TO_MANY Relations /]

[template public generateModelFromViewModelAssignmentForPrincipalEntity(aModelAssociation : ModelAssociation, aModel : Model) ? (aModelAssociation.cardinality = Cardinality::ONE_TO_MANY)]
_uow.[aModelAssociation.dependent.name/]Repository.GetAll(m => [aModel.name/]ViewModel.[aModelAssociation.dependentRoleName/]_[aModelAssociation.dependent.name/]Id.Contains(m.[aModelAssociation.dependent.name/]Id)).ToList();
[/template]

[template public generateModelFromViewModelAssignmentForDependentEntity(aModelAssociation : ModelAssociation, aModel : Model) ? (aModelAssociation.cardinality = Cardinality::ONE_TO_MANY)]
_uow.[aModelAssociation.principal.name/]Repository.Get(m => [aModel.name/]ViewModel.[aModelAssociation.principalRoleName/]_[aModelAssociation.principal.name/]Id == m.[aModelAssociation.principal.name/]Id);
[/template]

[comment End Model Associations for ONE_TO_MANY Relations /]