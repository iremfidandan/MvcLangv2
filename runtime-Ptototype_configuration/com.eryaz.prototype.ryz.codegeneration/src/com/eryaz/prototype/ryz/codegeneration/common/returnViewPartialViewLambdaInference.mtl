[comment encoding = UTF-8 /]
[module returnViewPartialViewLambdaInference('http://www.eryaz.com/prototype/ryz')]


[import com::eryaz::prototype::ryz::codegeneration::common::actionMethodLambdaExpOperand /]


[template public generateReturnViewPartialViewLambdaInference(aModel : Model, anActionMethod : ActionMethod)]
[for (aParameter : Parameter | getOperands(aModel, anActionMethod)) before ('m => ') separator (' && ')][generateActionMethodLambdaExpOperand(aParameter)/][/for]
[/template]



[query private getParameters(anActionMethod : ActionMethod) : OrderedSet(Parameter) = 
anActionMethod.parameters
/]

[query private getAllProperties(aModel : Model) : OrderedSet(Property) = 
aModel->closure(inherits)->including(aModel).properties->asOrderedSet()
/]

[query private parameterPropertyEquality(aParameter : Parameter, aProperty : Property) : Boolean = 
(aParameter.name = aProperty.name)._and(aParameter.type.toString() = aProperty.type.toString()) 
/]

[query private getRelatedProperties(aModel : Model, anActionMethod : ActionMethod) : OrderedSet(Parameter) = 
getParameters(anActionMethod)->product(getAllProperties(aModel))->select(e | parameterPropertyEquality(e.first, e.second))->collect(e | e.first)->asOrderedSet()
/]





[query private getAllKeys(aModel : Model) : Bag(TableKey) = 
aModel->closure(inherits)->including(aModel).tablekeys
/]

[query private parameterKeyEquality(aParameter : Parameter, aTableKey : TableKey) : Boolean = 
(aParameter.name = aTableKey.name)._and(aParameter.type.toString() = aTableKey.type.toString()) 
/]

[query private getRelatedKeys(aModel : Model, anActionMethod : ActionMethod) : OrderedSet(Parameter) = 
getParameters(anActionMethod)->product(getAllKeys(aModel))->select(e | parameterKeyEquality(e.first, e.second))->collect(e | e.first)->asOrderedSet()
/]






[query private getOperands(aModel : Model, anActionMethod : ActionMethod) : Set(Parameter) = 
getRelatedKeys(aModel, anActionMethod)->union(getRelatedProperties(aModel, anActionMethod)) 
/]